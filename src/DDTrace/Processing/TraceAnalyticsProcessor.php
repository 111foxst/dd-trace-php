<?php

namespace DDTrace\Processing;

use DDTrace\Span;
use DDTrace\Tag;

final class TraceAnalyticsProcessor
{
    public function process(Span $span)
    {
        // We only consider spans that are marked as trace analytics candidates, otherwise the customer bill would
        // explode because we are sampling not relevant spans.
        if (!$span->isTraceAnalyticsCandidate()) {
            return;
        }

        // We only process spans that are generated by an integration, no custom span. Being part of an integration
        // makes them configurable via the usual config options.
        if (null === $span->getIntegration()) {
            return;
        }

        // If a trace analytics tag has already been set, then we honor it.
        if ($span->hasTag(Tag::ANALYTICS_KEY)) {
            return;
        }

        $integration = $span->getIntegration();
        if ($integration->isTraceAnalyticsEnabled()) {
            $span->setTag(Tag::ANALYTICS_KEY, $integration->getTraceAnalyticsSampleRate(), true);
        }
    }
}
