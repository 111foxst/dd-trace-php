version: 2.1

aliases:

  - &CACHE_COMPOSER_KEY
    key: 'betav1-composer-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}'

  - &CACHE_NPM_KEY
    key: 'betav1-lint-deps-{{ checksum "composer.json" }}'

  - &IMAGE_DOCKER_DD_AGENT
    image: datadog/agent:latest
    environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=invalid_key_but_this_is_fine

  - &IMAGE_DOCKER_REDIS
    image: circleci/redis:4.0-alpine
    name: redis_integration

  - &IMAGE_DOCKER_ELASTICSEARCH2
    image: elasticsearch:2
    name: elasticsearch2_integration

  - &IMAGE_DOCKER_HTTPBIN
    image: kennethreitz/httpbin
    name: httpbin_integration

  - &IMAGE_DOCKER_MEMCHACED
    image: memcached:1.5-alpine
    name: memcached_integration

  - &IMAGE_DOCKER_MYSQL
    image: mysql:5.6
    name: mysql_integration
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_PASSWORD=test
      - MYSQL_USER=test
      - MYSQL_DATABASE=test

  - &IMAGE_DOCKER_MONGODB
    image: circleci/mongo:4.0
    name: mongodb_integration
    environment:
      - MONGO_INITDB_ROOT_USERNAME=test
      - MONGO_INITDB_ROOT_PASSWORD=test

  - &IMAGE_DOCKER_REQUEST_REPLAYER
    image: php:7.2
    name: request_replayer
    command: sh -c "curl --output index.php https://raw.githubusercontent.com/DataDog/dd-trace-php/dev/tests/request_replayer/index.php -q && php -S 0.0.0.0:80 index.php"
    environment:
      DD_REQUEST_DUMPER_FILE: dump.json

  - &STEP_ATTACH_WORKSPACE
    attach_workspace:
      at: ~/datadog

  - &STEP_EXT_INSTALL
    run:
      name: Build and install extension
      command: make sudo install install_ini BUILD_DIR=tmp/build_extension

  - &STEP_COMPOSER_SELF_UPDATE
    run:
      name: Updating composer itself
      command: sudo composer self-update

  - &STEP_COMPOSER_CACHE_RESTORE
    restore_cache:
      <<: *CACHE_COMPOSER_KEY

  - &STEP_COMPOSER_CACHE_SAVE
    save_cache:
      <<: *CACHE_COMPOSER_KEY
      paths:
        - vendor/

  - &STEP_COMPOSER_DISABLE_TLS
    run:
      name: Disabling tls for php < 5.6 (https://stackoverflow.com/questions/47527455/getting-an-error-peer-fingerprint-did-not-match-after-running-composer-update)
      command: composer config disable-tls true

  - &STEP_COMPOSER_INSTALL
    run:
      name: Installing dependencies with composer
      command: composer install --no-interaction

  - &STEP_PREPARE_TEST_RESULTS_DIR
    run:
      name: testresults dir
      command: mkdir test-results

  - &STEP_EXPORT_CI_ENV
    run:
      name: export .env.circleci
      command: |
        echo "export $(cat .env.circleci | xargs)" >> $HOME/.profile

  - &STEP_RUN_EXTENSION_TESTS
    run:
      name: Run extension tests with leak detection
      command: make test_extension_ci JUNIT_RESULTS_DIR=$(pwd)/test-results

  - &STEP_WAIT_AGENT
    run:
      name: Waiting for Dockerized agent
      command: dockerize -wait tcp://127.0.0.1:8126 -timeout 1m && export

  - &STEP_WAIT_MYSQL
    run:
      name: Waiting for Dockerized MySQL
      command: dockerize -wait tcp://mysql_integration:3306 -timeout 1m

  - &STEP_WAIT_REQUEST_REPLAYER
    run:
      name: Waiting for Dockerized request replayer
      command: dockerize -wait tcp://request_replayer:80/clear-dumped-data -timeout 2m

  - &STEP_WAIT_MONGODB
    run:
      name: Waiting for Dockerized MongoDB
      command: dockerize -wait tcp://mongodb_integration:27017 -timeout 1m

  - &STEP_RUN_UNIT_TESTS
    run:
      name: Run unit tests
      command: composer test-unit -- --log-junit test-results/php-unit/results.xml

  - &STEP_RUN_AUTO_INSTRUMENTATION_TESTS
    run:
      name: Run auto-instrumentation tests
      command: composer test-auto-instrumentation -- --log-junit test-results/php-auto-instrumentation/results.xml

  - &STEP_RUN_INTEGRATION_TESTS
    run:
      name: Run integration tests
      command: composer test-integration -- --log-junit test-results/php-integration/results.xml

  - &STEP_PERSIST_TO_WORKSPACE
    persist_to_workspace:
      root: '.'
      paths:
      - vendor/
      - tmp/build_extension

  - &STEP_STORE_ARTIFACTS
    store_artifacts:
      path: test-results

  - &STEP_STORE_TEST_RESULTS
    store_test_results:
      path: test-results

# Integrations tests execution

  - &STEP_RUN_INTEGRATIONS_TESTS_54
    run:
      command: composer test-integrations-54

  - &STEP_RUN_INTEGRATIONS_TESTS_56
    run:
      command: composer test-integrations-56

  - &STEP_RUN_INTEGRATIONS_TESTS_70
    run:
      command: composer test-integrations-70

  - &STEP_RUN_INTEGRATIONS_TESTS_71
    run:
      command: composer test-integrations-71

  - &STEP_RUN_INTEGRATIONS_TESTS_72
    run:
      command: composer test-integrations-72

  - &STEP_RUN_WEB_TESTS_54
    run:
      command: composer test-web-54

  - &STEP_RUN_WEB_TESTS_56
    run:
      command: composer test-web-56

  - &STEP_RUN_WEB_TESTS_70
    run:
      command: composer test-web-70

  - &STEP_RUN_WEB_TESTS_71
    run:
      command: composer test-web-71

  - &STEP_RUN_WEB_TESTS_72
    run:
      command: composer test-web-72


commands:
  prepare_extension_and_composer_with_cache:
    parameters:
      disable_tls:
        description: Disable tla in composer
        type: boolean
        default: false
    steps:
      - <<: *STEP_EXT_INSTALL
      - <<: *STEP_COMPOSER_SELF_UPDATE
      - <<: *STEP_COMPOSER_CACHE_RESTORE
      - <<: *STEP_COMPOSER_INSTALL
      - when:
          condition: << disable_tls >>
          steps:
            - run:
                when: << disable_tls >>
                name: Disable tls for php < 5.6 (https://stackoverflow.com/questions/47527455/getting-an-error-peer-fingerprint-did-not-match-after-running-composer-update)
                command: composer config disable-tls
      - <<: *STEP_COMPOSER_CACHE_SAVE

executors:
  with_agent:
    environment:
      DDAGENT_HOSTNAME: 127.0.0.1
    parameters:
      tag:
        type: string
    docker:
      - image: datadog/docker-library:<< parameters.tag >>
      - <<: *IMAGE_DOCKER_DD_AGENT
  with_integrations:
    environment:
      DDAGENT_HOSTNAME: 127.0.0.1
    parameters:
      tag:
        type: string
    docker:
      - image: datadog/docker-library:<< parameters.tag >>
      - <<: *IMAGE_DOCKER_DD_AGENT
      - <<: *IMAGE_DOCKER_ELASTICSEARCH2
      - <<: *IMAGE_DOCKER_HTTPBIN
      - <<: *IMAGE_DOCKER_REDIS
      - <<: *IMAGE_DOCKER_MEMCHACED
      - <<: *IMAGE_DOCKER_MYSQL
      - <<: *IMAGE_DOCKER_MONGODB
      - <<: *IMAGE_DOCKER_REQUEST_REPLAYER

jobs:
  "Lint files": &lint_files
    docker:
      - image: circleci/php:7.2-cli-node-browsers
    steps:
      - checkout
      - prepare_extension_and_composer_with_cache
      - restore_cache:
          <<: *CACHE_NPM_KEY
      - run:
          name: Installing dependencies with npm
          command: npm install eclint --no-package-lock --no-save
      - save_cache:
          <<: *CACHE_NPM_KEY
          paths:
          - node_modules/
      - run:
          name: Creating directory for phpcs results
          command: mkdir -p test-results/phpcs
      - run:
          name: Running eclint
          command: node_modules/.bin/eclint check '**/*' '!config.*' '!tmp/**/*' '!vendor/**/*' '!src/ext/.libs/*' '!LICENSE' '!phpstan.neon' '!tests/Frameworks/*/Version_*/**' '!tests/dockerfiles/**' || touch .failure
      - run:
          name: Running phpcs
          command: composer lint -- --report=junit | tee test-results/phpcs/results.xml || touch .failure
      - run:
          name: Install clang-format 6.0
          command: sudo apt -y install clang-format-6.0/testing
      - run:
          name: Run clang-format
          command: |
            find ./ -path ./vendor -prune -o -iname *.h -o -iname *.c | while read fname; do
              changes=$(clang-format-6.0 -output-replacements-xml $fname | grep -c "<replacement " || true)
              if [ $changes != 0 ]
              then
                clang-format-6.0 -output-replacements-xml $fname
                echo "$fname did not pass clang-format, consider running: find ./ -iname '*.h' -o -iname '*.c' | xargs clang-format -i"
                touch .failure
              fi
            done
      - run:
          name: Check linting failure
          command: test -e .failure && exit 1 || true
      - run:
          name: Verify PECL config and Version files
          command: make verify_all
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

  "Static Analysis":
    docker:
      - image: circleci/php:7.2
    steps:
      - checkout
      - prepare_extension_and_composer_with_cache
      - run:
          name: Install phpstan
          command: composer global require phpstan/phpstan
      - run:
          name: Running phpstan
          command: PATH=$PATH:~/.composer/vendor/bin composer static-analyze
  unit_tests:
    parameters:
      version:
        type: string
      disable_composer_tls:
        type: boolean
        default: false
    working_directory: ~/datadog
    environment:
      DDAGENT_HOSTNAME: 127.0.0.1
    executor:
      name: with_agent
      tag: ddtrace_alpine_php-<< parameters.version >>-debug
    steps:
      - checkout
      - <<: *STEP_ATTACH_WORKSPACE
      - prepare_extension_and_composer_with_cache:
          disable_tls: << parameters.disable_composer_tls >>
      - <<: *STEP_PREPARE_TEST_RESULTS_DIR
      - <<: *STEP_EXPORT_CI_ENV
      - <<: *STEP_RUN_EXTENSION_TESTS
      - <<: *STEP_RUN_UNIT_TESTS
      - <<: *STEP_PERSIST_TO_WORKSPACE
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

  integration_tests:
    working_directory: ~/datadog
    parameters:
      image_tag:
        type: string
      integration_tests_version:
        type: string
      disable_composer_tls:
        type: boolean
        default: false
    executor:
      name: with_integrations
      tag: << parameters.image_tag >>
    steps:
      - checkout
      - <<: *STEP_ATTACH_WORKSPACE
      - prepare_extension_and_composer_with_cache:
          disable_tls: << parameters.disable_composer_tls >>
      - <<: *STEP_PREPARE_TEST_RESULTS_DIR
      - <<: *STEP_EXPORT_CI_ENV
      - <<: *STEP_WAIT_AGENT
      - <<: *STEP_WAIT_MYSQL
      - <<: *STEP_WAIT_MONGODB
      - <<: *STEP_WAIT_REQUEST_REPLAYER
      - <<: *STEP_RUN_UNIT_TESTS
      - <<: *STEP_RUN_AUTO_INSTRUMENTATION_TESTS
      - <<: *STEP_RUN_INTEGRATION_TESTS
      - run:
          name: Run integrsation test specific to << parameters.integration_tests_version >>
          command: composer test-integrations-<< parameters.integration_tests_version >>
      - <<: *STEP_PERSIST_TO_WORKSPACE
      - <<: *STEP_STORE_TEST_RESULTS
      - <<: *STEP_STORE_ARTIFACTS

      # command: composer test-web-54
      # command: composer test-web-56
      # command: composer test-web-70
      # command: composer test-web-71
      # command: composer test-web-72

  "PHP 54 20100412": &5_4_ARTIFACT_BUILD
    working_directory: ~/datadog
    docker: [ image: 'datadog/docker-library:ddtrace_centos_6_php_5_4' ]
    environment:
      CFLAGS: "-O2 -Wall -Wextra"
    steps:
      - checkout
      - attach_workspace:
          at: ~/datadog
      - run:
          name: Build extension .so
          command: |
              mkdir -p extensions
              make all CFLAGS="${CFLAGS}" ECHO_ARG="-e"
              SUFFIX="$( echo "$CIRCLE_JOB" | awk '{print $NF}' )"
              cp tmp/build_extension/.libs/ddtrace.so extensions/ddtrace-$SUFFIX.so
              make clean debug all ECHO_ARG="-e"
              cp tmp/build_extension/.libs/ddtrace.so extensions/ddtrace-$SUFFIX-debug.so
      - persist_to_workspace:
          root: '.'
          paths: ['./extensions']

  "PHP 56 20131106": &ARTIFACT_BUILD
    <<: *5_4_ARTIFACT_BUILD
    docker: [ image: 'datadog/docker-library:ddtrace_centos_6_php_56' ]
    environment: { CFLAGS: "-O2 -Wall -Wextra" }

  "PHP 70 20151012":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'datadog/docker-library:ddtrace_centos_6_php_70' ]

  "PHP 71 20160303":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'datadog/docker-library:ddtrace_centos_6_php_71' ]

  "PHP 72 20170718":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'datadog/docker-library:ddtrace_centos_6_php_72' ]

  "PHP 73 20180731":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'datadog/docker-library:ddtrace_centos_7_php_73' ]

  "PHP 56 zts 20131106-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:5.6-zts' ]

  "PHP 70 zts 20151012-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.0-zts' ]

  "PHP 71 zts 20160303-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.1-zts' ]

  "PHP 72 zts 20170718-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.2-zts' ]

  "PHP 73 zts 20180731-zts":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'circleci/php:7.3-zts' ]

  "package extension":
    <<: *ARTIFACT_BUILD
    docker: [ image: 'datadog/docker-library:ddtrace_php_fpm_packaging' ]
    steps:
      - checkout
      - attach_workspace:
          at: ~/datadog
      - run:
          name: Build packages
          command: make packages
      - store_artifacts: { path: 'build/packages', destination: / }
      - store_artifacts: { path: 'packages.tar.gz', destination: '/all/packages.tar.gz' }
      - persist_to_workspace:
          root: '.'
          paths: ['./build/packages']

  "package verification":
    working_directory: ~/datadog
    machine:
      image: circleci/classic:latest
    steps:
      - checkout
      - attach_workspace:
          at: ~/datadog
      - run: mkdir -p test-results
      - run:
          name: Test installing packages on target systems
          command: make -f dockerfiles/verify_packages/Makefile docker_compose_pull all
      - store_test_results:
          path: test-results

workflows:
  version: 2
  build_packages:
    jobs:
      - "PHP 54 20100412": &BUILD_PACKAGE_FORKFLOW
          filters:
            tags:
              only: /(^build$)|(^[v]?[0-9]+(\.[0-9]+)*$)/
            branches:
              # Always build on master
              ignore: /^(?!master).*/
      - "PHP 56 20131106": *BUILD_PACKAGE_FORKFLOW
      - "PHP 70 20151012": *BUILD_PACKAGE_FORKFLOW
      - "PHP 71 20160303": *BUILD_PACKAGE_FORKFLOW
      - "PHP 72 20170718": *BUILD_PACKAGE_FORKFLOW
      - "PHP 73 20180731": *BUILD_PACKAGE_FORKFLOW
      - "PHP 56 zts 20131106-zts": *BUILD_PACKAGE_FORKFLOW
      - "PHP 70 zts 20151012-zts": *BUILD_PACKAGE_FORKFLOW
      - "PHP 71 zts 20160303-zts": *BUILD_PACKAGE_FORKFLOW
      - "PHP 72 zts 20170718-zts": *BUILD_PACKAGE_FORKFLOW
      - "PHP 73 zts 20180731-zts": *BUILD_PACKAGE_FORKFLOW
      - "package extension":
          requires:
            - "PHP 54 20100412"
            - "PHP 56 20131106"
            - "PHP 70 20151012"
            - "PHP 71 20160303"
            - "PHP 72 20170718"
            - "PHP 73 20180731"
            - "PHP 56 zts 20131106-zts"
            - "PHP 70 zts 20151012-zts"
            - "PHP 71 zts 20160303-zts"
            - "PHP 72 zts 20170718-zts"
            - "PHP 73 zts 20180731-zts"
      - "package verification":
          requires:
            - "package extension"
  build:
    jobs:
      - unit_tests:
          name: "Unit tests 54"
          version: "5.4"
          disable_composer_tls: true
      - unit_tests:
          name: "Unit tests 56"
          version: "5.6"
      - unit_tests:
          name: "Unit tests 70"
          version: "7.0"
      - unit_tests:
          name: "Unit tests 71"
          version: "7.1"
      - unit_tests:
          name: "Unit tests 72"
          version: "7.2"
      - unit_tests:
          name: "Unit tests 73"
          version: "7.3"
      - integration_tests:
          name: "Integration tests 54"
          image_tag: "ddtrace_alpine_php-5.4-debug"
          integration_tests_version: "54"
          disable_composer_tls: true
      - integration_tests:
          name: "Integration tests 56"
          integration_tests_version: "56"
          image_tag: "ddtrace_alpine_php-5.6-debug"
      - integration_tests:
          name: "Integration tests 70"
          integration_tests_version: "70"
          image_tag: "ddtrace_php_7_0"
      - integration_tests:
          name: "Integration tests 71"
          integration_tests_version: "71"
          image_tag: "ddtrace_php_7_1"
      - integration_tests:
          name: "Integration tests 72"
          integration_tests_version: "72"
          image_tag: "ddtrace_php_7_2"
      - integration_tests:
          name: "Integration tests 73"
          integration_tests_version: "72" # not yet defined for 7.3
          image_tag: "ddtrace_alpine_php-7.3"
      - "Lint files"
      - "Static Analysis"
